from hashlib import sha256
from random import randint

group16_rfc3526_hex="FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4DF435C934063199FFFFFFFFFFFFFFFF"
g16_prime = int(group16_rfc3526_hex, 16)
g16_gen = 2

def hide(x, gen, prime):
    return power_mod(gen, x, prime)

def multiply_hidden(hidden_x, hidden_y, prime):
    return mod(hidden_x*hidden_y, prime)

def verify(x, expected, gen, prime):
    return expected == hide(x, gen, prime)

# Pre-compute the asset tag
asset_seed = "Alice"
asset = int(sha256(asset_seed.encode('utf8')).hexdigest(), 16)
asset_tag = hide(asset, g16_gen, g16_prime)

# Encrypt the asset with OTP
random_key = randint(1, 1 << 256)

encrypted = asset + random_key

# Verify the asset
key_to_verify = random_key
asset_to_verify_tag = asset_tag

key_to_verify_tag = hide(key_to_verify, g16_gen, g16_prime)
expected_tag = multiply_hidden(asset_to_verify_tag, key_to_verify_tag, g16_prime)

assert verify(encrypted, expected_tag, g16_gen, g16_prime)


